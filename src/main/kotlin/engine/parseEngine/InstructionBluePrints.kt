package engine.parseEngine

import engine.parseEngine.InstructType.*

val instructionBlueprints = mapOf(
	"lit" to RegisterLong,
	"xlit" to Xlit,
	"settype" to Settype,
	"help" to SingleString,
	"call" to SingleString,
	"str" to StrSpecific,
	"syscall" to SystemCall,
	"" to Ignore,
	"//" to Ignore,
	"mod" to RegisterRegister,
	"add" to RegisterRegister,
	"sub" to RegisterRegister,
	"mul" to RegisterRegister,
	"div" to RegisterRegister,
	"eq" to RegisterRegister,
	"shl" to RegisterRegister,
	"shr" to RegisterRegister,
	"mov" to RegisterRegister,
	"cpy" to RegisterRegister,
	"and" to RegisterRegister,
	"or" to RegisterRegister,
	"xor" to RegisterRegister,
	"lt" to RegisterRegister,
	"gt" to RegisterRegister,
	"pow" to RegisterRegister,
	"xadd" to RegisterRegister,
	"xsub" to RegisterRegister,
	"xmul" to RegisterRegister,
	"xdiv" to RegisterRegister,
	"xpow" to RegisterRegister,
	"itof" to RegisterRegister,
	"ftoi" to RegisterRegister,
	"load" to RegisterRegister,
	"store" to RegisterRegister,
	"prints" to None,
	"ret" to None,
	"not" to Register,
	"printr" to Register,
	"peek" to Register,
	"pop" to Register,
	"push" to Register,
	"inr" to Register,
	"dealloc" to Register,
	"jmp" to InstructType.Long,
	"jz" to LongRegister,
	"jnz" to LongRegister
)
